{
    "swagger": "2.0",
    "info": {
        "description": "Provides all methods to persist data for GoToHell",
        "title": "GoToHell Gin REST API",
        "contact": {}
    },
    "paths": {
        "/api/sports": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "sport"
                ],
                "summary": "Create a sport entry",
                "parameters": [
                    {
                        "description": "Sport Payload(s)",
                        "name": "sport",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PostSportRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.PostSportReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorReply"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorReply"
                        }
                    }
                }
            }
        },
        "/friends": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a request for a friend request",
                "parameters": [
                    {
                        "description": "Friend request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.FriendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.MessageResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ErrorReply": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controllers.FriendRequest": {
            "type": "object",
            "required": [
                "friend_id"
            ],
            "properties": {
                "friend_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.FriendshipStatus"
                }
            }
        },
        "controllers.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "the response message",
                    "type": "string"
                }
            }
        },
        "controllers.PostSportReply": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PostSportRequest"
                    }
                }
            }
        },
        "models.FriendshipStatus": {
            "type": "string",
            "enum": [
                "pending",
                "accepted",
                "blocked"
            ],
            "x-enum-varnames": [
                "Pending",
                "Accepted",
                "blocked"
            ]
        },
        "models.PostSportRequest": {
            "type": "object",
            "required": [
                "amount",
                "game",
                "kind"
            ],
            "properties": {
                "amount": {
                    "description": "The amount of Exercises done",
                    "type": "integer",
                    "example": 42
                },
                "game": {
                    "description": "The Game, this sport-record belongs to\nexample: leauge",
                    "type": "string",
                    "example": "overwatch"
                },
                "id": {
                    "description": "ID of the user, who did the sport - currently set by the API",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind of the sport",
                    "type": "string",
                    "example": "push-up"
                },
                "timedate": {
                    "description": "when the sport was done as UTC time - currently set by the API",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "CookieAuth": {
            "type": "apiKey",
            "name": "session",
            "in": "cookie"
        }
    }
}