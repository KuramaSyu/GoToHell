name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # --- FRONTEND BUILD ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install dependencies
        working-directory: src/frontend
        run: npm install

      - name: Build frontend
        run: npm run build
        working-directory: src/frontend

      # --- BACKEND BUILD ---
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache Go modules
        working-directory: src/backend/src
        run: go mod tidy

      - name: Test backend
        working-directory: src/backend/src
        run: go test ./...

      - name: Build backend
        working-directory: src/backend/src
        run: go build -o server

      # --- DEPLOYMENT ON DEV BRANCH ONLY ---
      - name: Setup SSH
      if: github.ref == 'refs/heads/dev'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH & Docker Compose
      if: github.ref == 'refs/heads/dev'
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /home/kurama/ds/gotohell/GoToHell
            git fetch origin dev
            git reset --hard origin/dev
            docker compose down
            docker compose up --build -d
          EOF
        

    